CREATE TABLE `test1` (
	`id` bigint(20) AUTO_INCREMENT NOT NULL COMMENT 'id',
	`c_tinyint` tinyint(4) DEFAULT '1' COMMENT 'tinyint',
	`c_timestamp` timestamp DEFAULT NULL NULL COMMENT 'timestamp' ON UPDATE CURRENT_TIMESTAMP(),
	`c_time` time DEFAULT NULL COMMENT 'time',
	`c_char` char(10) DEFAULT NULL COMMENT 'char',
	`c_varchar` varchar(10) DEFAULT 'hello' COMMENT 'varchar',
	`c_longblob` longblob COMMENT 'longblob',
	PRIMARY KEY (`id`, `c_tinyint`)
)
COMMENT = '10000000'
AUTO_INCREMENT = 1769503
CHARSET = 'utf8mb4'
ENGINE = InnoDB
 --------------------
CREATE TABLE `test1` (
	`id` bigint(20) AUTO_INCREMENT NOT NULL COMMENT 'id',
	`c_tinyint` tinyint(4) DEFAULT '1' COMMENT 'tinyint',
	`c_timestamp` timestamp DEFAULT NULL NULL COMMENT 'timestamp' ON UPDATE CURRENT_TIMESTAMP(),
	`c_time` time DEFAULT NULL COMMENT 'time',
	`c_char` char(10) DEFAULT NULL COMMENT 'char',
	`c_varchar` varchar(10) DEFAULT 'hello' COMMENT 'varchar',
	`c_longblob` longblob COMMENT 'longblob',
	PRIMARY KEY (`id`, `c_tinyint`)
)
COMMENT = '10000000'
AUTO_INCREMENT = 1769503
CHARSET = 'utf8mb4'
ENGINE = InnoDB
------------------------------------------------------------------------------------------------------------------------
CREATE TABLE test_range1 (
	id INT,
	info VARCHAR(20)
)
PARTITION BY RANGE (id) (
	PARTITION p1 VALUES LESS THAN (200) TABLESPACE tbs_test_range1_p1,
	PARTITION p2 VALUES LESS THAN (400) TABLESPACE tbs_test_range1_p2,
	PARTITION p3 VALUES LESS THAN (600) TABLESPACE tbs_test_range1_p3,
	PARTITION pmax VALUES LESS THAN (MAXVALUE) TABLESPACE tbs_test_range1_p4
);
--------------------
CREATE TABLE test_range1 (
	id INT,
	info VARCHAR(20)
)
PARTITION BY RANGE (id) (
	PARTITION p1 VALUES LESS THAN (200) TABLESPACE tbs_test_range1_p1,
	PARTITION p2 VALUES LESS THAN (400) TABLESPACE tbs_test_range1_p2,
	PARTITION p3 VALUES LESS THAN (600) TABLESPACE tbs_test_range1_p3,
	PARTITION pmax VALUES LESS THAN (MAXVALUE) TABLESPACE tbs_test_range1_p4
);
------------------------------------------------------------------------------------------------------------------------
CREATE TABLE test_range2 (
	id INT,
	info VARCHAR(20)
)
PARTITION BY RANGE (id) (
	PARTITION p1 START (1) END (600) EVERY (200),
	PARTITION p2 START (600) END (800),
	PARTITION pmax START (800) END (MAXVALUE)
)
--------------------
CREATE TABLE test_range2 (
	id INT,
	info VARCHAR(20)
)
PARTITION BY RANGE (id) (
	PARTITION p1 START (1) END (600) EVERY (200),
	PARTITION p2 START (600) END (800),
	PARTITION pmax START (800) END (MAXVALUE)
)
------------------------------------------------------------------------------------------------------------------------
CREATE TABLE test_list (
	NAME VARCHAR(50),
	area VARCHAR(50)
)
PARTITION BY LIST (area) (
	PARTITION p1 VALUES  ('Beijing'),
	PARTITION p2 VALUES  ('Shanghai'),
	PARTITION p3 VALUES  ('Guangzhou'),
	PARTITION p4 VALUES  ('Shenzhen'),
	PARTITION pdefault VALUES  (DEFAULT)
)
--------------------
CREATE TABLE test_list (
	NAME VARCHAR(50),
	area VARCHAR(50)
)
PARTITION BY LIST (area) (
	PARTITION p1 VALUES  ('Beijing'),
	PARTITION p2 VALUES  ('Shanghai'),
	PARTITION p3 VALUES  ('Guangzhou'),
	PARTITION p4 VALUES  ('Shenzhen'),
	PARTITION pdefault VALUES  (DEFAULT)
)
------------------------------------------------------------------------------------------------------------------------
CREATE TABLE test_range (
	id INT,
	name VARCHAR(20),
	province VARCHAR(60),
	country VARCHAR(30) DEFAULT 'China'
)
DISTRIBUTE BY RANGE (id) (
	SLICE s1 START (100) END (200) EVERY (10),
	SLICE s2 START (200) END (300) EVERY (10)
)
--------------------
CREATE TABLE test_range (
	id INT,
	name VARCHAR(20),
	province VARCHAR(60),
	country VARCHAR(30) DEFAULT 'China'
)
DISTRIBUTE BY RANGE (id) (
	SLICE s1 START (100) END (200) EVERY (10),
	SLICE s2 START (200) END (300) EVERY (10)
)
------------------------------------------------------------------------------------------------------------------------
CREATE TABLE test_range (
	id INT,
	name VARCHAR(20),
	province VARCHAR(60),
	country VARCHAR(30) DEFAULT 'China'
)
DISTRIBUTE BY RANGE (id) (
	SLICE s1 VALUES LESS THAN (100) DATANODE dn_6001_6002_6003,
	SLICE s2 VALUES LESS THAN (200) DATANODE dn_6004_6005_6006,
	SLICE s3 VALUES LESS THAN (MAXVALUE) DATANODE dn_6007_6008_6009
)
--------------------
CREATE TABLE test_range (
	id INT,
	name VARCHAR(20),
	province VARCHAR(60),
	country VARCHAR(30) DEFAULT 'China'
)
DISTRIBUTE BY RANGE (id) (
	SLICE s1 VALUES LESS THAN (100) DATANODE dn_6001_6002_6003,
	SLICE s2 VALUES LESS THAN (200) DATANODE dn_6004_6005_6006,
	SLICE s3 VALUES LESS THAN (MAXVALUE) DATANODE dn_6007_6008_6009
)